<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE TS>
<TS version="2.1" language="en_US">
<context>
    <name>LLTutorWindow</name>
    <message>
        <location filename="lltutorwindow.ui" line="14"/>
        <source>LL(1)</source>
        <translation>LL(1)</translation>
    </message>
    <message>
        <location filename="lltutorwindow.ui" line="42"/>
        <source>✔</source>
        <translation>✔</translation>
    </message>
    <message>
        <location filename="lltutorwindow.ui" line="60"/>
        <source>Respuestas correctas</source>
        <translation>Correct answers</translation>
    </message>
    <message>
        <location filename="lltutorwindow.ui" line="63"/>
        <location filename="lltutorwindow.ui" line="102"/>
        <source>0</source>
        <translation>0</translation>
    </message>
    <message>
        <location filename="lltutorwindow.ui" line="81"/>
        <source>✘</source>
        <translation>✘</translation>
    </message>
    <message>
        <location filename="lltutorwindow.ui" line="84"/>
        <source>Respuestas incorrectas</source>
        <translation>Incorrect answers</translation>
    </message>
    <message>
        <location filename="lltutorwindow.ui" line="91"/>
        <source>Gramática</source>
        <translation>Grammar</translation>
    </message>
    <message>
        <location filename="lltutorwindow.ui" line="94"/>
        <source>Introduce aquí tu respuesta.</source>
        <translation>Enter your answer here.</translation>
    </message>
    <message>
        <location filename="lltutorwindow.ui" line="100"/>
        <source>La gramática es:
</source>
        <translation>The grammar is:
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.ui" line="103"/>
        <source>Generado automáticamente por SyntaxTutor el </source>
        <translation>Automatically generated by SyntaxTutor on </translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="242"/>
        <source>Conversación</source>
        <translation>Conversation</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="243"/>
        <source>Usuario: </source>
        <translation>User: </translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="244"/>
        <source>Tutor: </source>
        <translation>Tutor: </translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="248"/>
        <source>Cabeceras</source>
        <translation>FIRST sets</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="249"/>
        <source>CAB</source>
        <translation>FIRST</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="250"/>
        <source>Siguientes</source>
        <translation>FOLLOW</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="251"/>
        <source>SIG</source>
        <translation>FOLLOW</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="252"/>
        <source>Símbolos directores</source>
        <translation>Prediction symbols</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="253"/>
        <source>No terminal / Símbolo</source>
        <translation>Nonterminal / Symbol</translation>
    </message>
    <message>
        <location filename="lltutorwindow.ui" line="108"/>
        <source>Cancelar tabla LL(1)</source>
        <translation>Cancel LL(1) table</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="511"/>
        <location filename="lltutorwindow.cpp" line="649"/>
        <source>¿Quieres salir del tutor? Esto cancelará el ejercicio. Si lo que quieres es enviar tu respuesta, pulsa &quot;Finalizar&quot;.</source>
        <translation>Do you want to exit the tutor? This will cancel the exercise. If you want to submit your answer, press &quot;Finish&quot;.</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="513"/>
        <location filename="lltutorwindow.cpp" line="651"/>
        <source>Sí</source>
        <translation>Yes</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="517"/>
        <location filename="lltutorwindow.cpp" line="653"/>
        <source>No</source>
        <translation>No</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="527"/>
        <source>¿Cuántas filas y columnas tiene la tabla LL(1)?
Formato de respuesta: filas,columnas</source>
        <translation>How many rows and columns does the LL(1) table have?
Answer format: rows,columns</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="534"/>
        <source>¿Cuántos símbolos no terminales tiene la gramática?</source>
        <translation>How many nonterminal symbols does the grammar have?</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="540"/>
        <source>¿Cuántos símbolos terminales tiene la gramática?</source>
        <translation>How many terminal symbols does the grammar have?</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="546"/>
        <source>Entonces, basándote en los símbolos identificados,
¿cuántas filas y columnas tiene la tabla LL(1)? Formato: filas,columnas</source>
        <translation>Then, based on the identified symbols,
how many rows and columns does the LL(1) table have? Format: rows,columns</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="553"/>
        <source>¿Cuáles son los símbolos directores (SD) de esta regla?
%1 → %2
Formato: a,b,c</source>
        <translation>Which are the prediction symbols (SD) of this rule?
%1 → %2
Format: a,b,c</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="560"/>
        <source>¿Cuál es el conjunto cabecera (CAB) del consecuente?
%1 → %2
Formato: a,b,c</source>
        <translation>What is the FIRST set (CAB) of the consequent?
%1 → %2
Format: a,b,c</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="567"/>
        <source>¿Cuál es el conjunto SIG (símbolos siguientes) del antecedente?
%1 → %2
Formato: a,b,c</source>
        <translation>What is the FOLLOW set (SIG) of the antecedent?
%1 → %2
Format: a,b,c</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="574"/>
        <source>Entonces, ¿cuáles son los símbolos directores (SD) de la regla?
%1 → %2
Formato: a,b,c</source>
        <translation>So, what are the prediction symbols (SD) of the rule?
%1 → %2
Format: a,b,c</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="580"/>
        <source>Rellena la tabla LL(1), en el panel derecho puedes consultar todos los cálculos que has realizado durante el ejercicio.</source>
        <translation>Fill in the LL(1) table; in the right panel you can review all the calculations you have performed during the exercise.</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="586"/>
        <source>La tabla LL(1) tiene:
 - Una fila por cada símbolo NO TERMINAL
 - Una columna por cada TERMINAL (incluyendo $ y excluyendo EPSILON)
Esto define el tamaño de la tabla como filas × columnas.</source>
        <translation>The LL(1) table has:
 - One row for each NONTERMINAL symbol
 - One column for each TERMINAL (including $ and excluding EPSILON)
This defines the table size as rows × columns.</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="593"/>
        <source>Parece que no has seguido el formato correctamente. Debes separar el número de filas y columnas con una coma.
</source>
        <translation>It seems you have not followed the format correctly. You must separate the number of rows and columns with a comma.
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="599"/>
        <source>No has seguido el formato correspondiente (filas,columnas).
</source>
        <translation>You have not followed the required format (rows,columns).
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="605"/>
        <source>No has contado bien el número de símbolos terminales.
</source>
        <translation>You have not correctly counted the number of terminal symbols.
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="611"/>
        <source>No has contado bien el número de símbolos no terminales.
</source>
        <translation>You have not correctly counted the number of nonterminal symbols.
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="617"/>
        <source>Los NO TERMINALES son los que aparecen como antecedente en alguna regla.
En esta gramática: %1</source>
        <translation>NONTERMINALS are those that appear as the left-hand side in some production.
In this grammar: %1</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="623"/>
        <source>Los TERMINALES son todos los símbolos que aparecen en los consecuentes
y que NO son no terminales, excluyendo el símbolo de fin de entrada, pues es un metasímbolo que representa la cadena vacía.
En esta gramática: %1</source>
        <translation>The TERMINALS are all symbols that appear in the right-hand sides and are NOT nonterminals, excluding the end-of-input symbol, as it is a metasymbol representing the empty string.
In this grammar: %1</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="629"/>
        <source>Los TERMINALES son todos los símbolos que aparecen en los consecuentes
y que NO son no terminales, excluyendo el símbolo de fin de entrada ($).
En esta gramática: %1</source>
        <translation>The TERMINALS are all symbols that appear in the right-hand sides and are NOT nonterminals, excluding the end-of-input symbol ($).
In this grammar: %1</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="635"/>
        <source>Como hay %1 símbolos no terminales (filas) y %2 terminales (columnas, incluyendo $ y excluyendo EPSILON),
el tamaño de la tabla LL(1) será: %1.</source>
        <translation>Since there are %1 nonterminal symbols (rows) and %2 terminal symbols (columns, including $ and excluding EPSILON),
the size of the LL(1) table will be: %1.</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="642"/>
        <source>Para una regla X → Y, sus símbolos directores (SD) indican en qué columnas debe colocarse la producción en la tabla LL(1).
La fórmula es: SD(X → Y) = CAB(Y) - {ε} ∪ SIG(X) si ε ∈ CAB(Y)</source>
        <translation>For a production X → Y, its prediction symbols (SD) indicate which columns the production should be placed in the LL(1) table.
The formula is: SD(X → Y) = FIRST(Y) - {ε} ∪ FOLLOW(X) if ε ∈ FIRST(Y)</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="649"/>
        <source>No has indicado ningún símbolo director.
</source>
        <translation>You have not indicated any prediction symbol.
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="655"/>
        <source>Parece que no has separado los símbolos con comas correctamente.
</source>
        <translation>It seems you have not separated the symbols with commas correctly.
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="661"/>
        <source>Has introducido EPSILON, los símbolos directores no pueden contenerlo.
</source>
        <translation>You have entered EPSILON; prediction symbols cannot contain it.
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="667"/>
        <source>Te han faltado símbolos.
</source>
        <translation>You missed symbols.
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="673"/>
        <source>Has incluido símbolos que no corresponden: </source>
        <translation>You have included symbols that do not belong: </translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="679"/>
        <source>Se calcula CABECERA del consecuente: CAB(%1)
Con esto se obtienen los terminales que pueden aparecer al comenzar a derivar %1.
Resultado: { %2 }</source>
        <translation>Computing the FIRST of the consequent: FIRST(%1)
This yields the terminals that can appear at the start of deriving %1.
Result: { %2 }</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="685"/>
        <source>Cuando CAB(α) contiene ε, se necesita SIG(%1) para completar los símbolos directores.
%2</source>
        <translation>When FIRST(α) contains ε, FOLLOW(%1) is needed to complete the prediction symbols.
%2</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="691"/>
        <source>No has indicado ningún símbolo de SIG(%1).
</source>
        <translation>You have not indicated any symbol from FOLLOW(%1).
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="697"/>
        <source>Recuerda separar los símbolos de SIG(%1) con comas.
</source>
        <translation>Remember to separate the symbols of FOLLOW(%1) with commas.
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="703"/>
        <source>No forman parte de SIG(%1): %2.
</source>
        <translation>The following do not belong to FOLLOW(%1): %2.
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="709"/>
        <source>Un símbolo director indica cuándo se puede aplicar una producción durante el análisis.
%1</source>
        <translation>A prediction symbol indicates when a production can be applied during parsing.
%1</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="715"/>
        <source>No has seguido el formato indicado (símbolos separados por coma).
</source>
        <translation>You have not followed the indicated format (symbols separated by commas).
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="721"/>
        <source>Te han faltado estos símbolos directores: </source>
        <translation>You missed these prediction symbols: </translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="727"/>
        <source>Estos no son símbolos directores válidos: </source>
        <translation>These are not valid prediction symbols: </translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="733"/>
        <source>La tabla tiene errores.
Recuerda: una producción A → α se coloca en la celda (A, β) si β ∈ SD(A → α).
Si ε ∈ CAB(α), también debe colocarse en (A, b) para cada b ∈ SIG(A). Se ha marcado en rojo las celdas incorrectas.</source>
        <translation>The table has errors.
Remember: a production A → α is placed in the cell (A, β) if β ∈ SD(A → α).
If ε ∈ FIRST(α), it should also be placed in (A, b) for each b ∈ FOLLOW(A). The incorrect cells have been marked in red.</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="739"/>
        <source>Derivación de CABECERA</source>
        <translation>FIRST derivation</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="745"/>
        <source>Paso %1: %2</source>
        <translation>Step %1: %2</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="751"/>
        <source>Añadir ε, se ha llegado al final de la cadena</source>
        <translation>Add ε; the end of the string has been reached</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="757"/>
        <source>Terminal → Añadir a CAB</source>
        <translation>Terminal → Add to FIRST</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="763"/>
        <source>Evitando ciclo en %1</source>
        <translation>Avoiding cycle in %1</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="769"/>
        <source>Contiene ε → seguir con resto: %1</source>
        <translation>Contains ε → continue with the rest: %1</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="775"/>
        <source>CAB(%1%2)</source>
        <translation>FIRST(%1%2)</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="781"/>
        <source>Añadir ε a CAB</source>
        <translation>Add ε to FIRST</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="787"/>
        <source>Añadir %1 a CAB</source>
        <translation>Add %1 to FIRST</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="793"/>
        <source>Evitar ciclo: %1 → %2</source>
        <translation>Avoid cycle: %1 → %2</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="799"/>
        <source>ε → continuar con: %1</source>
        <translation>ε → continue with: %1</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="807"/>
        <source>Encontrar los símbolos siguientes a %1:
</source>
        <translation>Find the FOLLOW symbols of %1:
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="811"/>
        <source>Como %1 es el axioma, SIG(%1) = { %2 }
</source>
        <translation>Since %1 is the start symbol, FOLLOW(%1) = { %2 }
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="817"/>
        <source>1. %1 no aparece en ningún consecuente.
</source>
        <translation>1. %1 does not appear in any right-hand side.
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="823"/>
        <source>1. Busca las reglas donde %1 está en el consecuente:
</source>
        <translation>1. Find the rules where %1 is in the right-hand side:
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="830"/>
        <source>2. Calcula la cabecera de la subcadena después de %1: { %2 } = { %3 }
</source>
        <translation>2. Compute the FIRST set of the substring after %1: { %2 } = { %3 }
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="836"/>
        <source>   - Como ε ∈ CAB, agrega SIG(%1) = { %2 } a SIG(%3)
</source>
        <translation>   - Since ε ∈ FIRST, add FOLLOW(%1) = { %2 } to FOLLOW(%3)
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="842"/>
        <source>2. %1 está al final de la producción. Agrega SIG(%2) = { %3 } a SIG(%1)
</source>
        <translation>2. %1 is at the end of the production. Add FOLLOW(%2) = { %3 } to FOLLOW(%1)
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="848"/>
        <source>3. Conjunto SIG(%1) = { %2 }
</source>
        <translation>3. FOLLOW set of %1 = { %2 }
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="854"/>
        <source>Encontrar los símbolos directores de: %1 → %2:
</source>
        <translation>Find the prediction symbols of: %1 → %2:
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="860"/>
        <source>1. Calcula CAB(%1) = { %2 }
</source>
        <translation>1. Compute FIRST(%1) = { %2 }
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="866"/>
        <source>2. Inicializa los símbolos directores con CAB(%1) excepto ε: { %2 }
</source>
        <translation>2. Initialize the prediction symbols with FIRST(%1) excluding ε: { %2 }
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="872"/>
        <source>   - Como ε ∈ CAB(%1), agrega SIG(%2) a los símbolos directores.
</source>
        <translation>   - Since ε ∈ FIRST(%1), add FOLLOW(%2) to the prediction symbols.
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="878"/>
        <source>     SIG(%1) = { %2 }
</source>
        <translation>     FOLLOW(%1) = { %2 }
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="884"/>
        <source>3. Entonces, los símbolos directores de %1 → %2 son: { %3 }
</source>
        <translation>3. Therefore, the prediction symbols of %1 → %2 are: { %3 }
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="890"/>
        <source>1. Proceso para construir la tabla LL(1):
</source>
        <translation>1. Process to construct the LL(1) table:
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="896"/>
        <source>La tabla LL(1) se construye definiendo todos los símbolos directores para cada regla.
</source>
        <translation>The LL(1) table is constructed by defining all prediction symbols for each rule.
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="902"/>
        <source>  %1. SD(%2 → %3) = { %4 }
</source>
        <translation>  %1. SD(%2 → %3) = { %4 }
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="908"/>
        <source>2. Una gramática cumple la condición LL(1) si para cada no terminal A y cada par de reglas A → X y A → Y, SD(A → X) ∩ SD(A → Y) = ∅
</source>
        <translation>2. A grammar satisfies the LL(1) condition if for each nonterminal A and each pair of rules A → X and A → Y, SD(A → X) ∩ SD(A → Y) = ∅
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="914"/>
        <source>- Conflicto en %1:
</source>
        <translation>- Conflict in %1:
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="920"/>
        <source>  SD(%1 → %2)
</source>
        <translation>  SD(%1 → %2)
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="926"/>
        <source>3. Los conjuntos de símbolos directores no se solapan. La gramática es LL(1). La tabla LL(1) se construye de la siguiente forma.
</source>
        <translation>3. The prediction symbol sets do not overlap. The grammar is LL(1). The LL(1) table is constructed as follows.
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="932"/>
        <source>4. Ten una fila por cada símbolo no terminal (%1 filas), y una columna por cada terminal excepto epsilon más %2 (%3 columnas).
</source>
        <translation>4. Have one row for each nonterminal symbol (%1 rows), and one column for each terminal symbol except epsilon plus %2 (%3 columns).
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="938"/>
        <source>5. Coloca α en la celda (A,β) si β ∈ SD(A → α), déjala vacía en otro caso.
</source>
        <translation>5. Place α in the cell (A,β) if β ∈ SD(A → α); leave it empty otherwise.
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="944"/>
        <source>  - ll1(%1, %2) = %3
</source>
        <translation>  - ll1(%1, %2) = %3
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="950"/>
        <source>3. Como al menos dos conjuntos se solapan con el mismo terminal, la gramática no es LL(1).
</source>
        <translation>3. Since at least two sets overlap with the same terminal, the grammar is not LL(1).
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="956"/>
        <source>&lt;h3&gt;Tutor LL(1)&lt;/h3&gt;&lt;p&gt;Esta es la ventana del tutor de analizadores sintácticos LL(1).&lt;/p&gt;</source>
        <translation>&lt;h3&gt;LL(1) Tutor&lt;/h3&gt;&lt;p&gt;This is the LL(1) parser tutor window.&lt;/p&gt;</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="957"/>
        <source>&lt;h3&gt;Mensajes&lt;/h3&gt;&lt;p&gt;Aquí el tutor pregunta y el usuario debe responder según lo que se requiera. Aunque en el tutor LL(1) no es necesario.&lt;/p&gt;</source>
        <translation>&lt;h3&gt;Messages&lt;/h3&gt;&lt;p&gt;Here the tutor asks questions and the user must answer as required. Although in the LL(1) tutor it is not necessary.&lt;/p&gt;</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="958"/>
        <source>&lt;h3&gt;Formato de respuesta&lt;/h3&gt;&lt;p&gt;El tutor te pedirá números, cadenas o listas de símbolos separados por coma o números.&lt;/p&gt;</source>
        <translation>&lt;h3&gt;Answer format&lt;/h3&gt;&lt;p&gt;The tutor will ask for numbers, strings, or lists of symbols separated by commas or numbers.&lt;/p&gt;</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="959"/>
        <source>&lt;h3&gt;Ejemplo práctico&lt;/h3&gt;&lt;p&gt;Supón que te pidan el número de símbolos, dada la gramática, bastaría con responder con un número.&lt;/p&gt;</source>
        <translation>&lt;h3&gt;Practical example&lt;/h3&gt;&lt;p&gt;Suppose you are asked for the number of symbols; given the grammar, it would suffice to answer with a number.&lt;/p&gt;</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="960"/>
        <source>&lt;h3&gt;Gramática&lt;/h3&gt;&lt;p&gt;En esta sección se ven las reglas de la gramática, ε representa la cadena vacía y $ representa el fin de línea.&lt;/p&gt;</source>
        <translation>&lt;h3&gt;Grammar&lt;/h3&gt;&lt;p&gt;In this section you see the grammar rules, ε represents the empty string and $ represents end of line.&lt;/p&gt;</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="961"/>
        <source>&lt;h3&gt;Progreso&lt;/h3&gt;&lt;p&gt;Aquí se registran los pasos realizados: cabeceras (CAB), siguientes (SIG) y símbolos directores (SD).&lt;/p&gt;</source>
        <translation>&lt;h3&gt;Progress&lt;/h3&gt;&lt;p&gt;Here the steps performed are recorded: FIRST sets, FOLLOW sets, and prediction symbols (SD).&lt;/p&gt;</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="962"/>
        <source>&lt;h3&gt;Respuestas correctas&lt;/h3&gt;&lt;p&gt;Aquí podrás ver el número de respuestas correctas.&lt;/p&gt;</source>
        <translation>&lt;h3&gt;Correct answers&lt;/h3&gt;&lt;p&gt;Here you can see the number of correct answers.&lt;/p&gt;</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="963"/>
        <source>&lt;h3&gt;Respuestas incorrectas&lt;/h3&gt;&lt;p&gt;Y aquí el número de respuestas incorrectas. Cada vez que te equivoques, verás una breve animación en el mensaje.&lt;/p&gt;</source>
        <translation>&lt;h3&gt;Incorrect answers&lt;/h3&gt;&lt;p&gt;Here you can see the number of incorrect answers. Each time you make a mistake, you will see a brief animation in the message.&lt;/p&gt;</translation>
    </message>
</context>
<context>
    <name>MainWindow</name>
   <message>
    <location filename="mainwindow.cpp" line="343"/>
    <source>&lt;h3&gt;LL(1)&lt;/h3&gt;&lt;p&gt;Con este botón puedes lanzar el tutor LL(1).&lt;/p&gt;</source>
    <translation>&lt;h3&gt;LL(1)&lt;/h3&gt;&lt;p&gt;With this button you can launch the LL(1) tutor.&lt;/p&gt;</translation>
</message>
<message>
    <location filename="mainwindow.cpp" line="344"/>
    <source>&lt;h3&gt;SLR(1)&lt;/h3&gt;&lt;p&gt;Con este, el SLR(1).&lt;/p&gt;</source>
    <translation>&lt;h3&gt;SLR(1)&lt;/h3&gt;&lt;p&gt;With this one you can launch the SLR(1) tutor.&lt;/p&gt;</translation>
</message>
<message>
    <location filename="mainwindow.cpp" line="348"/>
    <source>&lt;p&gt;También puedes seleccionar el nivel de dificultad (1, 2 o 3). La dificultad repercute en la longitud de la gramática.&lt;/p&gt;</source>
    <translation>&lt;p&gt;You can also select the difficulty level (1, 2, or 3). The difficulty affects the length of the grammar.&lt;/p&gt;</translation>
</message>
<message>
    <location filename="mainwindow.cpp" line="352"/>
    <source>&lt;p&gt;Ahora se abrirá la ventana LL(1).&lt;/p&gt;</source>
    <translation>&lt;p&gt;The LL(1) window will now open.&lt;/p&gt;</translation>
</message>
<message>
    <location filename="mainwindow.cpp" line="375"/>
    <source>&lt;h3&gt;SLR(1)&lt;/h3&gt;&lt;p&gt;Pasemos al tutor SLR(1).&lt;/p&gt;</source>
    <translation>&lt;h3&gt;SLR(1)&lt;/h3&gt;&lt;p&gt;Let's move on to the SLR(1) tutor.&lt;/p&gt;</translation>
</message>
<message>
    <location filename="mainwindow.cpp" line="377"/>
    <source>&lt;p&gt;Esta vez se usará una gramática más compleja (Nivel 3).&lt;/p&gt;</source>
    <translation>&lt;p&gt;This time a more complex grammar will be used (Level 3).&lt;/p&gt;</translation>
</message>
<message>
    <location filename="mainwindow.cpp" line="378"/>
    <source>&lt;p&gt;Ahora se abrirá el tutor SLR(1).&lt;/p&gt;</source>
    <translation>&lt;p&gt;The SLR(1) tutor will now open.&lt;/p&gt;</translation>
</message>
<message>
    <location filename="mainwindow.cpp" line="453"/>
    <source>&lt;h2&gt;SyntaxTutor&lt;/h2&gt;</source>
    <translation>&lt;h2&gt;SyntaxTutor&lt;/h2&gt;</translation>
</message>
<message>
    <location filename="mainwindow.cpp" line="453"/>
    <source>&lt;p&gt;&lt;b&gt;Versión: 1.0&lt;/b&gt; </source>
    <translation>&lt;p&gt;&lt;b&gt;Version: 1.0&lt;/b&gt; </translation>
</message>
<message>
    <location filename="mainwindow.cpp" line="454"/>
    <source>&lt;/p&gt;</source>
    <translation>&lt;/p&gt;</translation>
</message>
<message>
    <location filename="mainwindow.cpp" line="454"/>
    <source>&lt;p&gt;Trabajo Fin de Grado – Analizador sintáctico interactivo.&lt;/p&gt;</source>
    <translation>&lt;p&gt;Final Degree Project – Interactive parser.&lt;/p&gt;</translation>
</message>
<message>
    <location filename="mainwindow.cpp" line="455"/>
    <source>&lt;p&gt;&lt;b&gt;Autor:&lt;/b&gt; José R.&lt;/p&gt;</source>
    <translation>&lt;p&gt;&lt;b&gt;Author:&lt;/b&gt; José R.&lt;/p&gt;</translation>
</message>
<message>
    <location filename="mainwindow.cpp" line="455"/>
    <source>&lt;p&gt;&lt;b&gt;Licencia:&lt;/b&gt; GPLv3&lt;/p&gt;</source>
    <translation>&lt;p&gt;&lt;b&gt;License:&lt;/b&gt; GPLv3&lt;/p&gt;</translation>
</message>
<message>
    <location filename="mainwindow.cpp" line="456"/>
    <source>&lt;p&gt;Desarrollado con &lt;a href=&apos;https://www.qt.io/&apos;&gt;Qt 6&lt;/a&gt; y C++20.&lt;/p&gt;</source>
    <translation>&lt;p&gt;Developed with &lt;a href=&apos;https://www.qt.io/&apos;&gt;Qt 6&lt;/a&gt; and C++20.&lt;/p&gt;</translation>
</message>
<message>
    <location filename="mainwindow.cpp" line="457"/>
    <source>&lt;p&gt;&lt;a href=&apos;https://github.com/jose-rZM/SyntaxTutor&apos;&gt;GitHub - jose-rZM&lt;/a&gt;&lt;/p&gt;</source>
    <translation>&lt;p&gt;&lt;a href=&apos;https://github.com/jose-rZM/SyntaxTutor&apos;&gt;GitHub - jose-rZM&lt;/a&gt;&lt;/p&gt;</translation>
</message>
<message>
    <location filename="mainwindow.cpp" line="458"/>
    <source>&lt;p&gt;2025 Universidad de Málaga&lt;/p&gt;</source>
    <translation>&lt;p&gt;2025 University of Málaga&lt;/p&gt;</translation>
</message>
<message>
    <location filename="mainwindow.cpp" line="496"/>
    <source>Referencia rápida LL(1)</source>
    <translation>LL(1) Quick Reference</translation>
</message>
<message>
    <location filename="mainwindow.cpp" line="498"/>
    <source>
      &lt;h3&gt;Referencia LL(1)&lt;/h3&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;b&gt;CAB(X):&lt;/b&gt; conjunto de símbolos terminales que comienzan cadenas derivables desde X.&lt;/li&gt;
        &lt;li&gt;&lt;b&gt;SIG(A):&lt;/b&gt; conjunto de terminales que pueden seguir a A en alguna derivación.&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;Construcción de la Tabla LL(1):&lt;/b&gt;
    &lt;ul&gt;
      &lt;li&gt;Para cada producción &lt;code&gt;A → α&lt;/code&gt; y cada terminal &lt;code&gt;a&lt;/code&gt; tal que 
          &lt;code&gt;a ∈ CAB(α)&lt;/code&gt;, asignar  
          &lt;code&gt;Tabla[A][a] = &quot;α&quot;&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;Si &lt;code&gt;ε ∈ CAB(α)&lt;/code&gt;, entonces para cada terminal 
          &lt;code&gt;b ∈ SIG(A)&lt;/code&gt; asignar  
          &lt;code&gt;Tabla[A][b] = &quot;α&quot;&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;Si &lt;code&gt;ε ∈ CAB(α)&lt;/code&gt; y &lt;code&gt;$ ∈ SIG(A)&lt;/code&gt;, entonces  
          &lt;code&gt;Tabla[A][$] = &quot;α&quot;&lt;/code&gt; (fin de cadena).&lt;/li&gt;
      &lt;li&gt;&lt;b&gt;Aceptación:&lt;/b&gt; Por convención, no se añade entrada especial; el parser termina cuando 
          encuentra &lt;code&gt;$&lt;/code&gt; en la pila y en la entrada.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
        &lt;li&gt;&lt;b&gt;Conflictos:&lt;/b&gt; Sitios donde CAB(α) ∩ CAB(β) ≠ ∅ o ε ∈ CAB(α) y CAB(β) ∩ SIG(A) ≠ ∅.&lt;/li&gt;
      &lt;/ul&gt;
    </source>
    <translation>
      &lt;h3&gt;LL(1) Reference&lt;/h3&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;b&gt;FIRST(X):&lt;/b&gt; set of terminal symbols that begin strings derivable from X.&lt;/li&gt;
        &lt;li&gt;&lt;b&gt;FOLLOW(A):&lt;/b&gt; set of terminals that can follow A in some derivation.&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;Construction of the LL(1) Table:&lt;/b&gt;
    &lt;ul&gt;
      &lt;li&gt;For each production &lt;code&gt;A → α&lt;/code&gt; and each terminal &lt;code&gt;a&lt;/code&gt; such that 
          &lt;code&gt;a ∈ FIRST(α)&lt;/code&gt;, assign  
          &lt;code&gt;Table[A][a] = &quot;α&quot;&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;If &lt;code&gt;ε ∈ FIRST(α)&lt;/code&gt;, then for each terminal 
          &lt;code&gt;b ∈ FOLLOW(A)&lt;/code&gt; assign  
          &lt;code&gt;Table[A][b] = &quot;α&quot;&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;If &lt;code&gt;ε ∈ FIRST(α)&lt;/code&gt; and &lt;code&gt;$ ∈ FOLLOW(A)&lt;/code&gt;, then  
          &lt;code&gt;Table[A][$] = &quot;α&quot;&lt;/code&gt; (end of string).&lt;/li&gt;
      &lt;li&gt;&lt;b&gt;Acceptance:&lt;/b&gt; By convention, no special entry is added; the parser finishes when 
          it finds &lt;code&gt;$&lt;/code&gt; on the stack and in the input.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
        &lt;li&gt;&lt;b&gt;Conflicts:&lt;/b&gt; Places where FIRST(α) ∩ FIRST(β) ≠ ∅ or ε ∈ FIRST(α) and FIRST(β) ∩ FOLLOW(A) ≠ ∅.&lt;/li&gt;
      &lt;/ul&gt;
    </translation>
</message>
<message>
    <location filename="mainwindow.cpp" line="555"/>
    <source>Referencia rápida SLR(1)</source>
    <translation>SLR(1) Quick Reference</translation>
</message>
<message>
    <location filename="mainwindow.cpp" line="557"/>
    <source>
      &lt;h3&gt;Referencia SLR(1)&lt;/h3&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;b&gt;Ítems LR(0):&lt;/b&gt; producciones con “∙” marcando la posición de análisis.&lt;/li&gt;
        &lt;li&gt;&lt;b&gt;Cierre( I ):&lt;/b&gt; añadir ítems B → ∙ γ para cada ítem A → α ∙ B β. Repetir hasta que no se añadan más.&lt;/li&gt;
        &lt;li&gt;&lt;b&gt;Goto( I, X ) o δ( I, X ):&lt;/b&gt; desplazar “∙” sobre X en todos los ítems de I y calcular su cierre.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Tabla SLR(1):&lt;/b&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;b&gt;Acciones (Action):&lt;/b&gt;  
      Para cada estado I y cada terminal a:
      &lt;ul&gt;
        &lt;li&gt;Si existe el ítem &lt;code&gt;A → α∙aβ&lt;/code&gt; en I, entonces &lt;code&gt;Action[I,a] = s&lt;sub&gt;j&lt;/sub&gt;&lt;/code&gt; (shift al estado j = Goto(I,a)).&lt;/li&gt;
        &lt;li&gt;Si existe el ítem &lt;code&gt;A → α∙&lt;/code&gt; en I, entonces &lt;code&gt;Action[I,a] = r&lt;sub&gt;k&lt;/sub&gt;&lt;/code&gt; (reduce usando la producción k = A→α) &lt;em&gt;para todo&lt;/em&gt; &lt;code&gt;a ∈ SIG(A)&lt;/code&gt;.&lt;/li&gt;
        &lt;li&gt;&lt;code&gt;Action[I,$] = acc&lt;/code&gt; si &lt;code&gt;S&apos; → S∙&lt;/code&gt; está en I (aceptación).&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;b&gt;Transiciones (Goto):&lt;/b&gt;  
      Para cada estado I y cada no terminal A:
      &lt;ul&gt;
        &lt;li&gt;Si &lt;code&gt;Goto(I,A) = J&lt;/code&gt;, entonces &lt;code&gt;Goto[I,A] = J&lt;/code&gt;.&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/li&gt;
      &lt;/ul&gt;
    </source>
    <translation>
      &lt;h3&gt;SLR(1) Reference&lt;/h3&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;b&gt;LR(0) Items:&lt;/b&gt; productions with “∙” marking the parsing position.&lt;/li&gt;
        &lt;li&gt;&lt;b&gt;Closure(I):&lt;/b&gt; add items B → ∙ γ for each item A → α ∙ B β. Repeat until no more are added.&lt;/li&gt;
        &lt;li&gt;&lt;b&gt;Goto(I, X) or δ(I, X):&lt;/b&gt; move “∙” over X in all items of I and compute its closure.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;SLR(1) Table:&lt;/b&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;b&gt;Actions (Action):&lt;/b&gt;  
      For each state I and each terminal a:
      &lt;ul&gt;
        &lt;li&gt;If the item &lt;code&gt;A → α∙aβ&lt;/code&gt; exists in I, then &lt;code&gt;Action[I,a] = s&lt;sub&gt;j&lt;/sub&gt;&lt;/code&gt; (shift to state j = Goto(I,a)).&lt;/li&gt;
        &lt;li&gt;If the item &lt;code&gt;A → α∙&lt;/code&gt; exists in I, then &lt;code&gt;Action[I,a] = r&lt;sub&gt;k&lt;/sub&gt;&lt;/code&gt; (reduce using production k = A→α) &lt;em&gt;for all&lt;/em&gt; &lt;code&gt;a ∈ FOLLOW(A)&lt;/code&gt;.&lt;/li&gt;
        &lt;li&gt;&lt;code&gt;Action[I,$] = acc&lt;/code&gt; if &lt;code&gt;S&apos; → S∙&lt;/code&gt; is in I (acceptance).&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;b&gt;Transitions (Goto):&lt;/b&gt;  
      For each state I and each nonterminal A:
      &lt;ul&gt;
        &lt;li&gt;If &lt;code&gt;Goto(I,A) = J&lt;/code&gt;, then &lt;code&gt;Goto[I,A] = J&lt;/code&gt;.&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/li&gt;
      &lt;/ul&gt;
    </translation>
</message>

</context>
<context>
    <name>SLRTutorWindow</name>
    <message>
        <location filename="slrtutorwindow.ui" line="14"/>
        <source>SLR1</source>
        <translation>SLR1</translation>
    </message>
    <message>
        <location filename="slrtutorwindow.ui" line="42"/>
        <source>✔</source>
        <translation>✔</translation>
    </message>
    <message>
        <location filename="slrtutorwindow.ui" line="48"/>
        <source>Respuestas correctas</source>
        <translation>Correct answers</translation>
    </message>
    <message>
        <location filename="slrtutorwindow.ui" line="58"/>
        <source>0</source>
        <translation>0</translation>
    </message>
    <message>
        <location filename="slrtutorwindow.ui" line="71"/>
        <source>✘</source>
        <translation>✘</translation>
    </message>
    <message>
        <location filename="slrtutorwindow.ui" line="77"/>
        <source>Respuestas incorrectas</source>
        <translation>Incorrect answers</translation>
    </message>
    <message>
        <location filename="slrtutorwindow.ui" line="84"/>
        <source>Gramática</source>
        <translation>Grammar</translation>
    </message>
    <message>
        <location filename="slrtutorwindow.ui" line="91"/>
        <source>Cancelar ejercicio SLR(1)</source>
        <translation>Cancel SLR(1) exercise</translation>
    </message>
    <message>
        <location filename="slrtutorwindow.cpp" line="959"/>
        <location filename="slrtutorwindow.cpp" line="1263"/>
        <source>¿Quieres salir del tutor? Esto cancelará el ejercicio. Si lo que quieres es enviar tu respuesta, pulsa &quot;Finalizar&quot;.</source>
        <translation>Do you want to exit the tutor? This will cancel the exercise. If you want to submit your answer, press &quot;Finish&quot;.</translation>
    </message>
    <message>
        <location filename="slrtutorwindow.cpp" line="966"/>
        <location filename="slrtutorwindow.cpp" line="1265"/>
        <source>Sí</source>
        <translation>Yes</translation>
    </message>
    <message>
        <location filename="slrtutorwindow.cpp" line="970"/>
        <location filename="slrtutorwindow.cpp" line="1267"/>
        <source>No</source>
        <translation>No</translation>
    </message>
    <message>
        <location filename="slrtutorwindow.cpp" line="976"/>
        <source>Encontrar los símbolos siguientes a %1:
</source>
        <translation>Find the FOLLOW symbols of %1:
</translation>
    </message>
    <message>
        <location filename="slrtutorwindow.cpp" line="980"/>
        <source>Como %1 es el axioma, SIG(%1) = { %2 }
</source>
        <translation>Since %1 is the start symbol, FOLLOW(%1) = { %2 }
</translation>
    </message>
    <message>
        <location filename="slrtutorwindow.cpp" line="986"/>
        <source>1. %1 no aparece en ningún consecuente.
</source>
        <translation>1. %1 does not appear in any right-hand side.
</translation>
    </message>
    <message>
        <location filename="slrtutorwindow.cpp" line="992"/>
        <source>1. Busca las reglas donde %1 está en el consecuente:
</source>
        <translation>1. Find the rules where %1 is in the right-hand side:
</translation>
    </message>
    <message>
        <location filename="slrtutorwindow.cpp" line="999"/>
        <source>2. Calcula la cabecera de la subcadena después de %1: { %2 } = { %3 }
</source>
        <translation>2. Compute the FIRST set of the substring after %1: { %2 } = { %3 }
</translation>
    </message>
    <message>
        <location filename="slrtutorwindow.cpp" line="1005"/>
        <source>   - Como ε ∈ CAB, agrega SIG(%1) = { %2 } a SIG(%3)
</source>
        <translation>   - Since ε ∈ FIRST, add FOLLOW(%1) = { %2 } to FOLLOW(%3)
</translation>
    </message>
    <message>
        <location filename="slrtutorwindow.cpp" line="1011"/>
        <source>2. %1 está al final de la producción. Agrega SIG(%2) = { %3 } a SIG(%1)
</source>
        <translation>2. %1 is at the end of the production. Add FOLLOW(%2) = { %3 } to FOLLOW(%1)
</translation>
    </message>
    <message>
        <location filename="slrtutorwindow.cpp" line="1017"/>
        <source>3. Conjunto SIG(%1) = { %2 }
</source>
        <translation>3. FOLLOW set of %1 = { %2 }
</translation>
    </message>
    <message>
        <location filename="slrtutorwindow.cpp" line="1023"/>
        <source>Encontrar los símbolos directores de: %1 → %2:
</source>
        <translation>Find the prediction symbols of: %1 → %2:
</translation>
    </message>
    <message>
        <location filename="slrtutorwindow.cpp" line="1029"/>
        <source>1. Calcula CAB(%1) = { %2 }
</source>
        <translation>1. Compute FIRST(%1) = { %2 }
</translation>
    </message>
    <message>
        <location filename="slrtutorwindow.cpp" line="1035"/>
        <source>2. Inicializa los símbolos directores con CAB(%1) excepto ε: { %2 }
</source>
        <translation>2. Initialize the prediction symbols with FIRST(%1) excluding ε: { %2 }
</translation>
    </message>
    <message>
        <location filename="slrtutorwindow.cpp" line="1041"/>
        <source>   - Como ε ∈ CAB(%1), agrega SIG(%2) a los símbolos directores.
</source>
        <translation>   - Since ε ∈ FIRST(%1), add FOLLOW(%2) to the prediction symbols.
</translation>
    </message>
    <message>
        <location filename="slrtutorwindow.cpp" line="1047"/>
        <source>     SIG(%1) = { %2 }
</source>
        <translation>     FOLLOW(%1) = { %2 }
</translation>
    </message>
    <message>
        <location filename="slrtutorwindow.cpp" line="1053"/>
        <source>3. Entonces, los símbolos directores de %1 → %2 son: { %3 }
</source>
        <translation>3. Therefore, the prediction symbols of %1 → %2 are: { %3 }
</translation>
    </message>
    <message>
        <location filename="slrtutorwindow.cpp" line="1059"/>
        <source>1. Proceso para construir la tabla LL(1):
</source>
        <translation>1. Process to construct the LL(1) table:
</translation>
    </message>
    <message>
        <location filename="slrtutorwindow.cpp" line="1065"/>
        <source>La tabla LL(1) se construye definiendo todos los símbolos directores para cada regla.
</source>
        <translation>The LL(1) table is constructed by defining all prediction symbols for each rule.
</translation>
    </message>
    <message>
        <location filename="slrtutorwindow.cpp" line="1071"/>
        <source>  %1. SD(%2 → %3) = { %4 }
</source>
        <translation>  %1. SD(%2 → %3) = { %4 }
</translation>
    </message>
    <message>
        <location filename="slrtutorwindow.cpp" line="1077"/>
        <source>2. Una gramática cumple la condición LL(1) si para cada no terminal A y cada par de reglas A → X y A → Y, SD(A → X) ∩ SD(A → Y) = ∅
</source>
        <translation>2. A grammar satisfies the LL(1) condition if for each nonterminal A and each pair of rules A → X and A → Y, SD(A → X) ∩ SD(A → Y) = ∅
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="1083"/>
        <source>- Conflicto en %1:
</source>
        <translation>- Conflict in %1:
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="1089"/>
        <source>  SD(%1 → %2)
</source>
        <translation>  SD(%1 → %2)
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="1095"/>
        <source>3. Los conjuntos de símbolos directores no se solapan. La gramática es LL(1). La tabla LL(1) se construye de la siguiente forma.
</source>
        <translation>3. The prediction symbol sets do not overlap. The grammar is LL(1). The LL(1) table is constructed as follows.
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="1101"/>
        <source>4. Ten una fila por cada símbolo no terminal (%1 filas), y una columna por cada terminal excepto epsilon más %2 (%3 columnas).
</source>
        <translation>4. Have one row for each nonterminal symbol (%1 rows), and one column for each terminal symbol except epsilon plus %2 (%3 columns).
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="1107"/>
        <source>5. Coloca α en la celda (A,β) si β ∈ SD(A → α), déjala vacía en otro caso.
</source>
        <translation>5. Place α in the cell (A,β) if β ∈ SD(A → α); leave it empty otherwise.
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="1113"/>
        <source>  - ll1(%1, %2) = %3
</source>
        <translation>  - ll1(%1, %2) = %3
</translation>
    </message>
    <message>
        <location filename="lltutorwindow.cpp" line="1119"/>
        <source>3. Como al menos dos conjuntos se solapan con el mismo terminal, la gramática no es LL(1).
</source>
        <translation>3. Since at least two sets overlap with the same terminal, the grammar is not LL(1).
</translation>
    </message>
</context>
<context>
    <name>SLRWizard</name>
    <message>
        <location filename="slrwizard.h" line="23"/>
        <source>Ayuda interactiva: Tabla SLR(1)</source>
        <translation>Interactive help: SLR(1) Table</translation>
    </message>
    <message>
        <location filename="slrwizard.h" line="47"/>
        <source>Estado %1: existe transición δ(%1, &apos;%2&apos;). ¿A qué estado harías shift?</source>
        <translation>State %1: there is a transition δ(%1, &apos;%2&apos;). To which state would you shift?</translation>
    </message>
    <message>
        <location filename="slrwizard.h" line="70"/>
        <source>Estado %1: contiene el ítem [%2 → ...·] y &apos;%3&apos; ∈ SIG(%2). ¿Qué regla usas para reducir (0, 1, ...)?</source>
        <translation>State %1: contains the item [%2 → ...·] and &apos;%3&apos; ∈ FOLLOW(%2). Which rule do you use to reduce (0, 1, ...)?</translation>
    </message>
    <message>
        <location filename="slrwizard.h" line="93"/>
        <source>Estado %1: contiene [S&apos; → S ·]. ¿Qué palabra clave usas para aceptar?</source>
        <translation>State %1: contains [S&apos; → S ·]. Which keyword do you use to accept?</translation>
    </message>
    <message>
        <location filename="slrwizard.h" line="113"/>
        <source>Estado %1: δ(%1, &apos;%2&apos;) existe. ¿A qué estado va la transición? (pon solo el número)</source>
        <translation>State %1: δ(%1, &apos;%2&apos;) exists. To which state does the transition go? (enter only the number)</translation>
    </message>
</context>
<context>
    <name>SLRWizardPage</name>
    <message>
        <location filename="slrwizardpage.h" line="31"/>
        <source>Estado %1, símbolo &apos;%2&apos;</source>
        <translation>State %1, symbol &apos;%2&apos;</translation>
    </message>
    <message>
        <location filename="slrwizardpage.h" line="46"/>
        <source>Escribe tu respuesta (p.ej. s3, r2, acc, 5)</source>
        <translation>Enter your answer (e.g., s3, r2, acc, 5)</translation>
    </message>
    <message>
        <location filename="slrwizardpage.h" line="49"/>
        <source>✔ Respuesta correcta, pasa a la siguiente pregunta</source>
        <translation>✔ Correct answer, move to the next question</translation>
    </message>
    <message>
        <location filename="slrwizardpage.h" line="52"/>
        <source>✘ Incorrecto, revisa el enunciado. Consulta los estados que has construido.</source>
        <translation>✘ Incorrect, review the statement. Check the states you have built.</translation>
    </message>
</context>
</TS>
